Evaluating baseline model on evaluation dataset
  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:01<00:10,  1.20s/it] 20%|██        | 2/10 [00:02<00:09,  1.17s/it] 30%|███       | 3/10 [00:03<00:08,  1.15s/it] 40%|████      | 4/10 [00:04<00:06,  1.15s/it] 50%|█████     | 5/10 [00:05<00:05,  1.14s/it] 60%|██████    | 6/10 [00:06<00:04,  1.13s/it] 70%|███████   | 7/10 [00:07<00:03,  1.15s/it] 80%|████████  | 8/10 [00:09<00:02,  1.14s/it] 90%|█████████ | 9/10 [00:10<00:01,  1.13s/it]100%|██████████| 10/10 [00:11<00:00,  1.06s/it]
Start train epoch 0, lr=0.0001 for run run_20210322T142457
  0%|          | 0/2500 [00:00<?, ?it/s][W ParallelNative.cpp:206] Warning: Cannot set number of intraop threads after parallel work has started or after set_num_threads call when using native parallel backend (function set_num_threads)
batch {'loc': tensor([[[0.9995, 0.7837],
         [0.4058, 0.2259],
         [0.0666, 0.9915],
         ...,
         [0.9579, 0.6624],
         [0.1340, 0.4456],
         [0.5358, 0.4083]],

        [[0.8050, 0.6537],
         [0.2870, 0.0794],
         [0.8521, 0.1121],
         ...,
         [0.3743, 0.8488],
         [0.0054, 0.8613],
         [0.0686, 0.9417]],

        [[0.8107, 0.1937],
         [0.5709, 0.8909],
         [0.6918, 0.3752],
         ...,
         [0.5492, 0.4259],
         [0.3838, 0.4157],
         [0.4183, 0.0361]],

        ...,

        [[0.5852, 0.6923],
         [0.2780, 0.6328],
         [0.1548, 0.1615],
         ...,
         [0.5452, 0.0763],
         [0.9276, 0.0571],
         [0.5733, 0.6480]],

        [[0.2607, 0.0727],
         [0.7712, 0.9673],
         [0.5877, 0.2055],
         ...,
         [0.6359, 0.8987],
         [0.3200, 0.9056],
         [0.7156, 0.5872]],

        [[0.9556, 0.2498],
         [0.0533, 0.1305],
         [0.0986, 0.8651],
         ...,
         [0.6400, 0.7023],
         [0.3788, 0.8943],
         [0.8342, 0.3867]]]), 'demand': tensor([[0.1000, 0.1000, 0.3000,  ..., 0.1000, 0.0333, 0.0667],
        [0.2333, 0.2667, 0.2667,  ..., 0.0667, 0.2333, 0.2333],
        [0.1000, 0.1333, 0.1000,  ..., 0.1333, 0.2667, 0.1667],
        ...,
        [0.0333, 0.0667, 0.2667,  ..., 0.1667, 0.2667, 0.2667],
        [0.1667, 0.0667, 0.2333,  ..., 0.0667, 0.1000, 0.2000],
        [0.1667, 0.3000, 0.1333,  ..., 0.0333, 0.2333, 0.2333]]), 'depot': tensor([[0.0118, 0.6114],
        [0.3972, 0.9541],
        [0.7613, 0.0725],
        ...,
        [0.1538, 0.8128],
        [0.4905, 0.3717],
        [0.0505, 0.9895]])}

Finished epoch 0, took 00:00:43 s
Saving model and state...
Validating...
  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:01<00:11,  1.23s/it] 20%|██        | 2/10 [00:02<00:09,  1.21s/it] 30%|███       | 3/10 [00:04<00:09,  1.42s/it] 40%|████      | 4/10 [00:05<00:08,  1.42s/it] 50%|█████     | 5/10 [00:06<00:06,  1.35s/it] 60%|██████    | 6/10 [00:08<00:05,  1.30s/it] 70%|███████   | 7/10 [00:09<00:03,  1.28s/it] 80%|████████  | 8/10 [00:10<00:02,  1.24s/it] 90%|█████████ | 9/10 [00:11<00:01,  1.21s/it]100%|██████████| 10/10 [00:12<00:00,  1.13s/it]
Validation overall avg_cost: 19.87197494506836 +- 0.03672889620065689
Evaluating candidate model on evaluation dataset
  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:01<00:11,  1.27s/it] 20%|██        | 2/10 [00:02<00:09,  1.24s/it] 30%|███       | 3/10 [00:03<00:08,  1.25s/it] 40%|████      | 4/10 [00:04<00:07,  1.24s/it] 50%|█████     | 5/10 [00:06<00:06,  1.22s/it] 60%|██████    | 6/10 [00:07<00:04,  1.20s/it] 70%|███████   | 7/10 [00:08<00:03,  1.21s/it] 80%|████████  | 8/10 [00:09<00:02,  1.19s/it] 90%|█████████ | 9/10 [00:10<00:01,  1.17s/it]Epoch 0 candidate mean 19.922813415527344, baseline epoch 0 mean 19.922813415527344, difference 0.0
100%|██████████| 10/10 [00:11<00:00,  1.13s/it]Set warmup alpha = 1.0

/anaconda3/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:136: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  "https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate", UserWarning)
Traceback (most recent call last):
  File "run.py", line 229, in <module>
    run(get_options())
  File "run.py", line 204, in run
    start_time
KeyboardInterrupt
